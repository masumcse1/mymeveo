<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:hftl="http://hftl.org" template="/layout/template.xhtml" xmlns:p="http://primefaces.org/ui" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:o="http://omnifaces.org/ui"
    xmlns:s="http://jboss.org/seam/faces">

    <ui:define name="metadata">
        <f:metadata>
            <f:event type="preRenderView" listener="#{meveoModuleListBean.preRenderView}" />
        </f:metadata>
    </ui:define>

    <ui:define name="body">
            <h:form id="crumbmenuForm">
                <p:breadCrumb homeDisplay="text" id="crumbmenu">
                    <p:menuitem value="#{messages['menu.configuration']}" disabled="true" />
                    <p:menuitem outcome="meveoModules" value="#{messages['menu.meveoModules']}" />
                </p:breadCrumb>
            </h:form>
        <o:importFunctions type="org.meveo.commons.utils.ReflectionUtils" var="ref" />

        <hftl:searchPanel backingBean="#{meveoModuleListBean}" label="#{messages['meveoModule.search']}" exportToJson="true">
            <hftl:searchField id="meveoModule" label="#{messages['BusinessEntity.code']}" field="code" />
            <hftl:searchField label="#{messages['BusinessEntity.description']}" field="description" />
            <hftl:searchField label="#{messages['meveoModule.license']}" field="license" />
        </hftl:searchPanel>

        <p:messages id="messages">
            <p:autoUpdate />
        </p:messages>
        <p:outputPanel id="listOfModules">
	        <hftl:dataList label="#{messages['meveoModule.title']}" 
	        	backingBean="#{meveoModuleListBean}" 
	        	exportXlsxButton="false" 
	        	exportToCsv="false" 
	        	exportToJson="true"
	        	import="true"
	        	exportToXml="false">
	        	
	            <hftl:column label="#{messages['BusinessEntity.code']}" field="code" useCustomIdParam="true"/>
	            <hftl:column label="#{messages['BusinessEntity.description']}" field="description" />
	            <p:column headerText="#{messages['meveoModule.logo']}">
	                <c:set var="pictureDestUrl"
	                    value="http://${request.serverName}:${request.serverPort}${request.contextPath}/picture/${appProvider.code}/module/${entity.logoPicture}" />
	                <h:graphicImage url="${pictureDestUrl}" rendered="#{not empty entity.logoPicture}">
	                    <f:attribute name="height" value="30"></f:attribute>
	                    <f:attribute name="width" value="30"></f:attribute>
	                </h:graphicImage>
	            </p:column>
	            <hftl:column label="#{messages['meveoModule.currentVersion']}" field="currentVersion" />
	            <hftl:column label="#{messages['meveoModule.license']}" field="license.label" isMessage="true" />
	            <p:column headerText="#{messages['commons.status']}">
	                <h:outputText value="#{messages[!entity.installed?'meveoModule.downloaded':entity.active?'meveoModule.installedAndEnabled':'meveoModule.installedAndDisabled']}"
	                    rendered="#{entity.downloaded}" />
	                <h:outputText value="#{messages[entity.active?'enableEntity.active':'enableEntity.disabled']}" rendered="#{!entity.downloaded}" />
	            </p:column>
	            <hftl:actionsColumn useCustomIdParam="true" permission="#{currentUser.hasRole('administrationManagement')}" renderEnableLink="false" renderDeleteLink="false">
	                <ui:define name="actionButtons">
	                    <p:commandButton id="deleteModule" immediate="true" icon="ui-icon-trash" oncomplete="PF('deleteDialog').show();" rendered="#{meveoModuleListBean.canUserUpdateEntity()}" update=":deleteDialog">
	                        <f:setPropertyActionListener target="#{meveoModuleListBean.entity}" value="#{entity}" />
	                        <f:setPropertyActionListener target="#{meveoModuleListBean.deleteFiles}" value="#{!entity.isInDraft}" />
	                    </p:commandButton>
	                </ui:define>
	            </hftl:actionsColumn>
	            <ui:define name="add-on-buttons">
	                <p:commandButton id="downloadMeveoModuleButton" rendered="#{meveoModuleListBean.canUserUpdateEntity()}" value="#{messages['meveoModule.downloadAndInstallModules']}"
	                    update=":#{p:component('meveoModulesDialog')}" oncomplete="PF('meveoModulesDialog').show()">
	                </p:commandButton>
                    <p:commandButton id="importFromFileButton" value="#{messages['meveoModule.importFromInternalFile']}" actionListener="#{meveoModuleListBean.getFilesFromFileExplorer}" oncomplete="PF('importFromInternalFileDialog').show()" update="importForm"/>
	            </ui:define>
	        </hftl:dataList>
        </p:outputPanel>

        <p:dialog id="meveoModulesDialog" styleClass="confirm-dialog" header="#{messages['meveoModule.installModules']}" widgetVar="meveoModulesDialog" width="750" modal="true">
            <hftl:decorateFormPanel formId="modules">
                <ui:define name="fields">
                    <hftl:decorateFormField label="#{messages['meveoModule.meveoInstance']}">
                        <p:selectOneMenu value="#{meveoModuleListBean.meveoInstance}" id="Meveoinstance" required="true">
                            <f:selectItem />
                            <f:selectItems value="#{meveoInstanceListBean.listAll()}" var="listVal" itemLabel="#{listVal.code}" itemValue="#{listVal}" />
                            <hftl:objectConverter />
                            <p:ajax event="valueChange" update="@form" listener="#{meveoModuleListBean.loadModulesFromInstance}" />
                        </p:selectOneMenu>
                    </hftl:decorateFormField>
                    <hftl:decorateFormField label="#{messages['meveoModule.meveoModules']}" componentWidth="100" newLine="true">
                        <p:dataTable id="dtos" value="#{meveoModuleListBean.moduleDtos}" paginator="true" rows="10" widgetVar="dtoWgt" var="module" lazy="true"
                            selection="#{meveoModuleListBean.selectedModuleDto}"
                            paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                            rowsPerPageTemplate="10,20,30,50" styleClass="custom-grid" resizableColumns="true">
                            <p:column headerText="#{messages['businessEntity.code']}" sortBy="#{module.code}">
                                <p:commandLink value="#{module.code}" update=":#{p:component('meveoModuleDialog')}"
                                    oncomplete="PF('meveoModulesDialog').hide();PF('meveoModuleDialog').show()">
                                    <f:setPropertyActionListener value="#{module}" target="#{meveoModuleListBean.selectedModuleDto}" />
                                </p:commandLink>
                            </p:column>
                            <p:column headerText="#{messages['businessEntity.description']}">
                                <h:outputText value="#{module.description}" />
                            </p:column>
                            <p:column headerText="#{messages['meveoModule.license']}">
                                <h:outputText value="#{messages[module.license.label]}" />
                            </p:column>
                        </p:dataTable>
                    </hftl:decorateFormField>
                    <hftl:decorateFormField label="Repositories :" componentWidth="100" newLine="true">
         				<p:pickList value="#{meveoModuleListBean.repositoriesDM}" var="repo" itemLabel="#{repo}" itemValue="#{repo}">  
						</p:pickList>
					</hftl:decorateFormField>
                </ui:define>
            </hftl:decorateFormPanel>
        </p:dialog>
        <p:dialog id="meveoModuleDialog" styleClass="confirm-dialog" header="#{messages['meveoModule.installHeader']}" widgetVar="meveoModuleDialog" width="900" modal="true"
            closeOnEscape="true">
            <hftl:decorateFormPanel formId="module" rendered="#{meveoModuleListBean.selectedModuleDto != null}" label="#{messages['meveoModule.moduleInformation']}">
                <ui:define name="fields">

                    <hftl:decorateFormField label="#{messages['businessEntity.code']}" componentWidth="25">
                        <h:outputText value="#{meveoModuleListBean.selectedModuleDto.code}" styleClass="field-value" />
                    </hftl:decorateFormField>
                    <hftl:decorateFormField label="#{messages['businessEntity.description']}" componentWidth="50">
                        <h:outputText value="#{meveoModuleListBean.selectedModuleDto.description}" styleClass="field-value" />
                    </hftl:decorateFormField>
                    <hftl:decorateFormField label="#{messages['meveoModule.license']}" componentWidth="25">
                        <h:outputText value="#{messages[meveoModuleListBean.selectedModuleDto.license.label]}" styleClass="field-value" />
                    </hftl:decorateFormField>

                    <hftl:decorateFormField label="#{messages['meveoModule.items']}" componentWidth="100" displayOneLine="false" newLine="true">
                        <p:treeTable id="moduleItems" lazy="false" value="#{meveoModuleListBean.selectedModuleItems}" var="item" nodeVar="node" reflow="false"
                            resizableColumns="true" rowIndexVar="rowIndex" scrollable="true" scrollHeight="300">
                            <p:column headerText="#{messages['businessEntity.code']}">
                                <h:outputText value="#{node.data}" styleClass="field-value" rendered="#{node.type ne 'item'}" />
                                <h:outputText value="#{item.code}" rendered="#{node.type eq 'item'}" />
                            </p:column>
                            <p:column headerText="#{messages['businessEntity.description']}">
                                <h:outputText value="#{item.description}" rendered="#{node.type eq 'item' and ref:hasField(item, 'description')}" />
                            </p:column>
                            <p:column headerText="#{messages['meveoModuleItem.appliesTo']}">
                                <h:outputText value="#{item.appliesTo}" converter="customFieldAppliesToConverter"
                                    rendered="#{node.type eq 'item' and ref:hasField(item, 'appliesTo')}" />
                            </p:column>
                        </p:treeTable>
                    </hftl:decorateFormField>
                </ui:define>
                <ui:define name="buttons">
                    <p:commandButton id="download" value="#{messages['meveoModule.download']}" rendered="#{meveoModuleListBean.canUserUpdateEntity()}"
                        oncomplete="PF('meveoModuleDialog').hide();PF('meveoModulesDialog').show()" process="@this" action="#{meveoModuleListBean.downloadModule}"
                        update="@this :#{p:component('meveoModulesDialog')} :#{p:component('listOfModules')}">
                    </p:commandButton>
                    <p:commandButton id="downloadAndInstall" value="#{messages['meveoModule.downloadAndInstall']}" rendered="#{meveoModuleListBean.canUserUpdateEntity()}"
                        oncomplete="PF('meveoModuleDialog').hide();PF('meveoModulesDialog').hide()" process="@this" action="#{meveoModuleListBean.downloadAndInstallModule}"
                        update="@this :#{p:component('meveoModulesDialog')} :#{p:component('listOfModules')}">
                    </p:commandButton>
                    <p:commandButton id="confirmKo" value="#{messages['action.cancel']}" onclick="PF('meveoModuleDialog').hide();PF('meveoModulesDialog').show()" type="button" />
                </ui:define>
            </hftl:decorateFormPanel>
        </p:dialog>
        <p:dialog id="deleteDialog" header="#{messages['commons.confirmationHeader']}" widgetVar="deleteDialog" modal="true" height="250" width="400">
            <h:form id="deleteDialogForm">
                <h:panelGrid id="deleteFile" columns="1">
                    #{messages['commons.confirmDelete']}
                       <h:panelGrid columns="1" cellpadding="5">
                			<p:selectBooleanButton value="#{meveoModuleListBean.moduleUninstall.removeItems}" id="remove" 
                 				onIcon="ui-icon-check" offIcon="ui-icon-close"
                 				offLabel="Disable module items" onLabel="Delete module items"/>
	               			<p:selectBooleanButton value="#{meveoModuleListBean.moduleUninstall.removeData}"
	               				onIcon="ui-icon-check" offIcon="ui-icon-close"
	               				offLabel="Keep custom tables" onLabel="Delete custom tables"/>
	               			<p:selectBooleanButton value="#{meveoModuleListBean.moduleUninstall.removeFiles}"
	               				onIcon="ui-icon-check" offIcon="ui-icon-close"
	               				offLabel="Keep module files" onLabel="Delete module files"/>
	               			<p:selectBooleanButton value="#{meveoModuleListBean.moduleUninstall.withDependencies}"
                   				onIcon="ui-icon-check" offIcon="ui-icon-close"
                   				offLabel="Keep module dependencies" onLabel="Delete module dependencies"/>
                  		</h:panelGrid>
                </h:panelGrid>
                <h:panelGroup layout="block" styleClass="form-panel-actions">
                    <p:commandButton action="#{meveoModuleListBean.delete()}" process="@form" update="@form" value="#{messages['commons.yes']}" styleClass="ui-confirmdialog-yes" icon="ui-icon-check" oncomplete="PF('deleteDialog').hide();" />
                    <p:commandButton value="#{messages['commons.no']}" type="button" styleClass="ui-confirmdialog-no" icon="ui-icon-close" onclick="PF('deleteDialog').hide();" />
                </h:panelGroup>
            </h:form>
        </p:dialog>
        <p:dialog widgetVar="importFromInternalFileDialog" header="#{messages['action.selectFile']}" dynamic="true" modal="true" styleClass="form-dialog"
                   closeOnEscape="true" width="60%" appendTo="@(body)">
            <h:form id="importForm">
                <p:dataTable var="file" value="#{meveoModuleListBean.fileList}" sortBy="#{file.name}" rows="10" resizableColumns="true"
                             paginator="true" paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}" rowsPerPageTemplate="10,15">
                    <f:facet name="header">
                        <p:spacer width="8" />
                        <p:commandButton icon="fa fa-level-up" value="Up"
                                         rendered="#{meveoModuleListBean.hasSelectedFolder()}"
                                         action="#{meveoModuleListBean.setSelectedFolder('..')}"
                                         update=":importForm" />
                        <p:spacer width="8" />
                        <h:outputText
                                value="#{messages['fileExplorer.currentDirectory']}: #{meveoModuleListBean.selectedFolder}"
                                rendered="#{meveoModuleListBean.hasSelectedFolder()}" />
                    </f:facet>
                    <p:column headerText="#{messages['fileExplorer.fileName']}"
                              sortBy="#{file.name}">
                        <p:commandLink action="#{meveoModuleListBean.setSelectedFolder(file.name)}"
                                       rendered="#{file.isDirectory()}" update=":importForm">
                            <i class="fa fa-folder-o fa-2x"></i>
                            <p:spacer width="8" />
                            <h:outputText value='#{file.name}' />
                        </p:commandLink>
                        <p:commandLink action="#{meveoModuleListBean.setSelectedFileName(file.name)}"
                                       rendered="#{!file.isDirectory()}" update=":importForm">
                            <i class="fa fa-file-#{meveoModuleListBean.getFileType(file.name)}-o fa-2x"></i>
                            <p:spacer width="8" />
                            <h:outputText value='#{file.name}' />
                        </p:commandLink>
                    </p:column>

                    <p:column headerText="#{messages['fileExplorer.fileDate']}"
                              sortBy="#{file.lastModified()}">
                        <h:outputText value="#{file.lastModified()}">
                            <f:convertDateTime pattern="yyyy-MM-dd HH:mm:ss" />
                        </h:outputText>
                    </p:column>
                    <f:facet name="footer">
                        <h:outputText value="#{meveoModuleListBean.selectedFileName}" rendered="#{meveoModuleListBean.selectedFileName != null and (meveoModuleListBean.selectedFileName.endsWith('.json') or meveoModuleListBean.selectedFileName.endsWith('.zip'))}"/>
                        <p:commandButton value="#{messages['fileExplorer.importMeveoModule']}" action="#{meveoModuleListBean.importFromInternalFile}" oncomplete="PF('importFromInternalFileDialog').hide();" update="@form :listOfModules"
                                         rendered="#{meveoModuleListBean.selectedFileName != null and (meveoModuleListBean.selectedFileName.endsWith('.json') or meveoModuleListBean.selectedFileName.endsWith('.zip'))}">
                        </p:commandButton>
                        <p:button value="#{messages['action.cancel']}" onclick="PF('importFromInternalFileDialog').hide(); return false;"/>
                    </f:facet>
                </p:dataTable>
            </h:form>
        </p:dialog>
    </ui:define>
</ui:composition>
