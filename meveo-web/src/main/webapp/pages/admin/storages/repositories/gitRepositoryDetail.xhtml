<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:hftl="http://hftl.org"
	xmlns:hf="http://xmlns.jcp.org/jsf/composite/tags"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	template="/layout/template.xhtml" xmlns:o="http://omnifaces.org/ui">

	<ui:define name="metadata">
		<f:metadata>
			<f:viewParam name="objectId" value="#{gitRepositoryBean.objectId}" />
		</f:metadata>
	</ui:define>

	<ui:define name="body">
		<h:form id="crumbmenuForm">
			<p:breadCrumb homeDisplay="text" id="crumbmenu">
				<p:menuitem value="#{messages['menu.configuration']}"
					disabled="true" />
				<p:menuitem value="#{messages['menu.storages']}" disabled="true" />
				<p:menuitem outcome="gitRepositories"
					value="#{messages['menu.gitRepositories']}" />
				<p:menuitem
					value="#{messages['commons.new']} #{messages['menu.gitRepositories']}"
					disabled="true" rendered="#{gitRepositoryBean.entity.transient}" />
				<p:menuitem value="#{gitRepositoryBean.entity.code}" disabled="true"
					rendered="#{!gitRepositoryBean.entity.transient}" />
			</p:breadCrumb>
		</h:form>

		<hftl:formPanel formId="formGitRepository"
			label="#{messages['menu.gitRepositories']}"
			backingBean="#{gitRepositoryBean}" showFormButtons="false">
			<h:panelGrid columns="4">
				<hftl:formField label="#{messages['businessEntity.code']}"
					field="code" required="true" allowEdit="false" />
				<hftl:formField label="#{messages['businessEntity.description']}"
					field="description" />
				<hftl:formField label="#{messages['gitRepositories.defaultBranch']}"
								field="defaultBranch" />
				<hftl:formField label="#{messages['gitRepositories.isLocked']}" field="locked"/>
			</h:panelGrid>
			<h:panelGrid columns="1">
				<hftl:formField maxlength="255" allowEdit="false"
					label="#{messages['gitRepositories.remoteOrigin']}"
					field="remoteOrigin"
					listenerUpdate="@this defaultRemoteUsername defaultRemotePassword actions actionButtons" />
			</h:panelGrid>
			<h:panelGrid columns="2">
				<h:panelGroup id="defaultRemoteUsername">
					<hftl:formField
						label="#{messages['gitRepositories.defaultRemoteUsername']}"
						field="defaultRemoteUsername" componentWidth="30"
						rendered="#{gitRepositoryBean.entity.remoteOrigin != null}"
						listenerUpdate="actions" />
				</h:panelGroup>
				<h:panelGroup id="defaultRemotePassword">
					<hftl:formField
						label="#{messages['gitRepositories.defaultRemotePassword']}"
						field="clearDefaultRemotePassword" componentWidth="30"
						secret="true"
						rendered="#{gitRepositoryBean.entity.remoteOrigin != null}"
						listenerUpdate="actions" />
				</h:panelGroup>
			</h:panelGrid>

			<h:panelGrid id="actions" columns="3">
				<p:commandButton id="push"
					value="#{messages['gitRepositories.push']}"
					rendered="#{gitRepositoryBean.entity.remoteOrigin != null}"
					oncomplete="PF('pushRemoteDlg').show()" immediate="true"
					icon="ui-icon-arrowthick-1-ne" update="@form" />
				<p:commandButton id="pull"
					value="#{messages['gitRepositories.pull']}"
					rendered="#{gitRepositoryBean.entity.remoteOrigin != null}"
					oncomplete="PF('pullRemoteDlg').show()" immediate="true"
					icon="ui-icon-arrowthick-1-sw" update="@form" />
				<p:commandButton id="install-module"
					value="#{messages['gitRepositories.install']}"
					rendered="#{gitRepositoryBean.isModuleRepository()}"
					disabled="#{gitRepositoryBean.isModuleInstalled()}"
					onclick="PF('installDialog').show()">
				</p:commandButton>
				<p:button id="meveoModuleDetailButton"
					rendered="#{gitRepositoryBean.getModuleId() != null}"
					outcome="meveoModuleDetail" icon="ui-icon-search">
					<f:param name="meveoModuleId" value="#{gitRepositoryBean.getModuleId()}" />
				</p:button>
			</h:panelGrid>

			<ui:param name="buttons" value="true" />
			<ui:define name="buttons">
				<h:panelGrid id="actionButtons" columns="6">
					<p:commandButton id="savePopupRemote"
						value="#{messages['action.save']}"
						oncomplete="PF('remoteDlg').show()" icon="ui-icon-check"
						update=":remoteForm"
						rendered="#{gitRepositoryBean.entity.id == null and not empty gitRepositoryBean.entity.remoteOrigin}">
					</p:commandButton>
					<p:commandButton id="saveButtonRemote"
						value="#{messages['action.save']}" onclick="delayDisable(this);"
						oncomplete="this.disabled=false;"
						action="#{gitRepositoryBean.saveOrUpdateGit}" icon="ui-icon-check"
						update="@form"
						rendered="#{gitRepositoryBean.entity.id != null or (gitRepositoryBean.entity.id == null and gitRepositoryBean.entity.remoteOrigin == null)}">
						<f:param name="edit" value="true" />
					</p:commandButton>
					<hf:clearButton label="#{messages['action.reset']}"
						edit="#{gitRepositoryBean.edit}"
						rendered="#{gitRepositoryBean.canUserUpdateEntity()}"
						resetAction="#{gitRepositoryBean.resetFormEntity()}" />
					<p:button id="backButton" value="#{messages['action.back']}"
						outcome="#{gitRepositoryBean.back()}" />
					<p:commandButton
						rendered="#{'Meveo' != gitRepositoryBean.entity.code}"
						disabled="#{gitRepositoryBean.isModuleInstalled()}"
						icon="ui-icon-trash" value="#{messages['commons.delete']}"
						action="#{gitRepositoryBean.deleteWithBack}" immediate="true"
						update="@form">
						<p:confirm header="#{messages['commons.confirmationHeader']}"
							message="#{messages['commons.confirmDelete']}"
							icon="ui-icon-alert" />
					</p:commandButton>
					<p:commandButton value="#{messages['gitRepositories.importZip']}"
						process="@form" type="submit" onclick="PF('importDialog').show();"
						rendered="#{gitRepositoryBean.entity.remoteOrigin == null}" />
					<p:commandButton value="#{messages['gitRepositories.exportZip']}"
						type="button" rendered="#{gitRepositoryBean.entity.id != null}"
						onclick="PF('exportDialog').show()" />
				</h:panelGrid>
			</ui:define>
		</hftl:formPanel>

		<p:dialog id="pushRemoteDlg" widgetVar="pushRemoteDlg"
			header="#{messages['gitRepositories.header']}" dynamic="true"
			modal="true" styleClass="form-dialog" closeOnEscape="true"
			width="50%" appendTo="@(body)">
			<p:messages autoUpdate="true" />
			<h:form id="pushRemoteForm">
				<h:panelGrid columns="1">
					<hftl:decorateFormField fieldId="username"
						label="#{messages['gitRepositories.username']}">
						<p:inputText autocomplete="off" id="username"
							value="#{gitRepositoryBean.username}" size="50" />
					</hftl:decorateFormField>
					<hftl:decorateFormField fieldId="password"
						label="#{messages['gitRepositories.password']}">
						<h:inputSecret autocomplete="off" id="password"
							value="#{gitRepositoryBean.password}" size="50" redisplay="true" />
					</hftl:decorateFormField>
				</h:panelGrid>
				<p:commandButton value="#{messages['gitRepositories.push']}"
					action="#{gitRepositoryBean.pushRemote}"
					update="@form :formGitRepository" process="@form"
					oncomplete="if (args &amp;&amp; !args.validationFailed) PF('pushRemoteDlg').hide()">
					<f:ajax render="@all" />
				</p:commandButton>
				<p:button value="#{messages['action.cancel']}"
					onclick="PF('pushRemoteDlg').hide(); return false;" />
			</h:form>
		</p:dialog>

		<p:dialog id="pullRemoteDlg" widgetVar="pullRemoteDlg"
			header="#{messages['gitRepositories.header']}" dynamic="true"
			modal="true" styleClass="form-dialog" closeOnEscape="true"
			width="50%" appendTo="@(body)">
			<p:messages autoUpdate="true" />
			<h:form id="pullRemoteForm" autocomplete="off">
				<h:panelGrid columns="1">
					<hftl:decorateFormField fieldId="username"
						label="#{messages['gitRepositories.username']}">
						<p:inputText autocomplete="off" id="username"
							value="#{gitRepositoryBean.username}" size="50" />
					</hftl:decorateFormField>
					<hftl:decorateFormField fieldId="password"
						label="#{messages['gitRepositories.password']}">
						<h:inputSecret autocomplete="off" id="password"
							value="#{gitRepositoryBean.password}" size="50" redisplay="true" />
					</hftl:decorateFormField>
				</h:panelGrid>
				<p:commandButton value="#{messages['gitRepositories.pull']}"
					action="#{gitRepositoryBean.pullRemote}"
					update="@form :formGitRepository" process="@form"
					oncomplete="if (args &amp;&amp; !args.validationFailed) PF('pullRemoteDlg').hide()">
					<f:ajax render="@all" />
				</p:commandButton>
				<p:button value="#{messages['action.cancel']}"
					onclick="PF('pullRemoteDlg').hide(); return false;" />
			</h:form>
		</p:dialog>

		<p:dialog id="remoteDlg" widgetVar="remoteDlg"
			header="#{messages['gitRepositories.header']}" dynamic="true"
			modal="true" styleClass="form-dialog" closeOnEscape="true"
			width="50%" appendTo="@(body)">
			<h:form id="remoteForm">
				<h:panelGrid columns="1">
					<hftl:decorateFormField fieldId="username"
						label="#{messages['gitRepositories.username']}">
						<p:inputText id="username" value="#{gitRepositoryBean.username}"
							size="50" />
					</hftl:decorateFormField>
					<hftl:decorateFormField fieldId="password"
						label="#{messages['gitRepositories.password']}">
						<h:inputSecret id="password" value="#{gitRepositoryBean.password}"
							maxlength="50" redisplay="true" />
					</hftl:decorateFormField>
				</h:panelGrid>
				<p:commandButton value="#{messages['action.save']}"
					action="#{gitRepositoryBean.saveOrUpdateGit}"
					update="@form :formGitRepository" process="@form" type="submit"
					oncomplete="if (args &amp;&amp; !args.validationFailed) PF('remoteDlg').hide()">
				</p:commandButton>
				<p:button value="#{messages['action.cancel']}"
					onclick="PF('remoteDlg').hide(); return false;" />
			</h:form>
		</p:dialog>

		<h:form>
			<p:dialog header="#{messages['gitRepositories.importZip']}"
				id="importDialog" widgetVar="importDialog" modal="true"
				closeOnEscape="true">
				<p:fileUpload accept=".zip"
					fileUploadListener="#{gitRepositoryBean.importZip}" mode="advanced"
					process="@this" dragDropSupport="true" allowTypes="/(\.|\/)(zip)$/"
					update="@form :formGitRepository" styleClass="TexAlCenter">
				</p:fileUpload>
			</p:dialog>

			<p:dialog resizable="false"
				header="#{messages['gitRepositories.exportZip']}" id="exportDialog"
				styleClass="form-dialog" widgetVar="exportDialog" modal="true"
				closeOnEscape="true" width="200">
				<hftl:decorateFormField fieldId="branch"
					label="#{messages['gitRepositories.branch']}">
					<p:selectOneMenu id="branch" value="#{gitRepositoryBean.branch}">
						<hftl:objectConverter />
						<f:selectItem itemLabel="#{messages['commons.select']}" />
						<f:selectItems value="#{gitRepositoryBean.entity.branches}" />
					</p:selectOneMenu>
				</hftl:decorateFormField>
				<div class="clearLeft">
					<p:commandButton id="buttonExport"
						value="#{messages['action.export']}" ajax="false"
						onclick="PrimeFaces.monitorDownload(null, closeExportDialog)">
						<p:fileDownload id="exportFileDownload"
							value="#{gitRepositoryBean.exportZip()}" />
					</p:commandButton>
				</div>
			</p:dialog>
		</h:form>

		<p:remoteCommand name="closeExportDialog"
			oncomplete="PF('exportDialog').hide()" />

		<p:confirmDialog id="installDialog" widgetVar="installDialog" message="Installation parameters " header="#{messages['meveoModule.install']}">
			<h:form style="margin-top: 5px; margin-bottom: 5px;">
				<hftl:decorateFormField fieldId="repoPickList" label="Repository :" componentWidth="100" newLine="true">
					<p:pickList id="repoPickList" value="#{gitRepositoryBean.repositories}" var="repo" itemLabel="#{repo}" itemValue="#{repo}"/>
				</hftl:decorateFormField>
				<p:commandButton process="@form @this" id="install_btn" update="@form" icon="ui-icon-check" styleClass="ui-confirmdialog-yes"
					value="#{messages['meveoModule.install']}"
					action="#{gitRepositoryBean.install}"
					/>

				<p:commandButton onclick="PF('installDialog').hide()" value="#{messages['action.cancel']}" type="button" styleClass="ui-confirmdialog-no"
					icon="ui-icon-close" />
					
			</h:form>
		</p:confirmDialog>
		
		<p:dialog id="installingDeps" widgetVar="installingDeps">
			<h:form>
				<p:poll interval="5" update="@form" />
				<span>The following modules are being installed : </span>
				<ul>
					<c:forEach var="module" items="#{gitRepositoryBean.missingDependencies}">
						<c:choose>
							<c:when test="#{module.installing}">
								<li>
									<span>Installing #{module.code}:#{module.currentVersion} (#{module.gitUrl}) ...</span>
									<div style="width:64px;height:64px;position:fixed;right:5px;bottom:5px">
										<h:graphicImage library="img" name="loading.gif" />
									</div>
								</li>
							</c:when>
							<c:when test="#{module.installed}">
								<li>Installed #{module.code}:#{module.currentVersion} (#{module.gitUrl})</li>
							</c:when>
							<c:otherwise>
								<li>#{module.code}:#{module.currentVersion} (#{module.gitUrl})</li>
							</c:otherwise>
						</c:choose>
					</c:forEach>
				</ul>
			</h:form>
		</p:dialog>

		<p:dialog id="installDeps" widgetVar="installDeps">
			<h:form>
				<span>The following modules are required : </span>
				<ul>
					<c:forEach var="module" items="#{gitRepositoryBean.missingDependencies}">
						<li>#{module.code}:#{module.currentVersion} (#{module.gitUrl})</li>
					</c:forEach>
				</ul>
				<p:fieldset legend="Git credentials">
					<h:panelGrid columns="2">
						<hftl:decorateFormField fieldId="username" label="#{messages['gitRepositories.username']}">
							<p:inputText id="username" value="#{gitRepositoryBean.username}" size="50" />
						</hftl:decorateFormField>
						<hftl:decorateFormField fieldId="password" label="#{messages['gitRepositories.password']}">
							<h:inputSecret id="password" value="#{gitRepositoryBean.password}" maxlength="50" redisplay="true" />
						</hftl:decorateFormField>
					</h:panelGrid>
				</p:fieldset>
				<p:commandButton value="Install dependencies" action="#{gitRepositoryBean.installMissingDependencies}" async="true" 
					oncomplete="PF('installDeps').hide();PF('installingDeps').show();"
					onclick="PF('installDeps').hide();PF('installingDeps').show();">
<!-- 					<f:ajax render="@all" /> -->
				</p:commandButton>
			</h:form>
		</p:dialog>
	</ui:define>
</ui:composition>