<!--

    Makes part of "happy faces" component group.
    A custom tag to enhance p:datatable component.
        
    Attributes
        backingBean - a backing bean associated to datatable
        dataModel - datamodel. Use lazyDataModel from a backingBean if one not provided
        formId - id of a form that wraps the datatable
        resultsId - id assigned to a datatable with "datatable_" prefix        
        editable and editMode - are values in datatable are inline editable and in what mode
        scrollable - is datatable scrolable
        checkMany - show multiple item checkboxes
        deleteManyButton - show delete multiple items button
        exportButton - show "export to xls" button
        exportSelection - show "Export selected elements" button
        exportXlsxButton - show "export to xlsx" button
        exportToXml - show "export to xml" button. Defaults to True if any of the export buttons are enabled
        exportToCsv - show "export to Csv" button
        exportToJson - show "export to Json" button
        importCsv - show "import from Csv" button
        import - show "Import" button
        sortBy and sortOrder - a default field to sort by and a default sort order
        rowsPerPage - possible paging sizes separated by a comma
        showFullTextSearch - shall a "global search" filter be visible in the header
        styleClass = custom style for the datalist
        paginatorPosition - allows to specify if the paginator appears on the table's top, bottom or both
        prePaginatorControls - allows to set custom controls that appear just before the paginator.  To set it up correctly, enter a facet name e.g.
        		<hftl:dataList prePaginatorControls="{CustomControls}">
        			<f:facet name="{CustomControls}">
        				...
        			</f:facet>
        			...
        		</hftl:datalist>
         
-->
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:hftl="http://hftl.org"
	xmlns:l="http://www.lapis.com/jsf/exporter">

	<c:if test="${empty editable}">
		<c:set var="editable" value="false" />
	</c:if>
	<c:if test="${empty scrollable}">
		<c:set var="scrollable" value="false" />
	</c:if>
	<c:if test="${editable}">
		<c:if test="${empty editMode}">
			<c:set var="editMode" value="cell" />
		</c:if>
	</c:if>
	<c:if test="${empty styleClass}">
		<c:set var="styleClass" value=" " />
	</c:if>
	<!-- 	<c:if test="${empty edit}"> -->
	<!-- 		<c:set var="edit" value="true" /> -->
	<!-- 	</c:if> -->

	<c:if test="${empty checkMany}">
		<c:set var="checkMany" value="true" />
	</c:if>
	<c:if test="${empty deleteManyButton}">
		<c:set var="deleteManyButton" value="false" />
	</c:if>

	<c:if test="${empty exportButton}">
		<c:set var="exportButton" value="false" />
	</c:if>
	<c:if test="${empty exportXlsxButton}">
		<c:set var="exportXlsxButton" value="true" />
	</c:if>

	<c:if test="${empty fileName}">
		<c:set var="fileName" value="exportData" />
	</c:if>

	<c:if test="${empty exportToCsv}">
		<c:set var="exportToCsv" value="false" />
	</c:if>
	
	<c:if test="${empty import}">
		<c:set var="import" value="false"/>
	</c:if>

	<c:if test="${empty exportToJson}">
		<c:set var="exportToJson" value="false" />
	</c:if>

	<c:if test="${empty importCsv}">
		<c:set var="importCsv" value="false" />
	</c:if>

	<c:if test="${empty exportToXml}">
		<c:set var="exportToXml"
			value="#{exportButton or exportXlsxButton or exportToCsv}" />
	</c:if>

	<c:if test="${empty importStrategy}">
		<c:set var="importStrategy" value="false" />
	</c:if>

	<c:if test="${empty addToModule}">
		<c:set var="addToModule" value="false" />
	</c:if>

	<c:if test="${empty resultsId}">
		<c:set var="resultsId" value="results" />
	</c:if>

	<c:if test="${empty formId}">
		<c:set var="formId" value="#{resultsId}_form" />
	</c:if>

	<c:if test="${dataModel==null}">
		<c:set var="dataModel" value="#{backingBean.lazyDataModel}" />
	</c:if>

	<c:if test="${empty sortBy}">
		<c:set var="sortBy" value="#{null}" />
	</c:if>

	<c:if test="${empty sortOrder}">
		<c:set var="sortOrder" value="ASCENDING" />
	</c:if>
	<c:if test="${empty rowsPerPage}">
		<c:set var="rowsPerPage" value="10,15,20,50" />
	</c:if>
	<c:if test="${empty showFullTextSearch}">
		<c:set var="showFullTextSearch" value="false" />
	</c:if>

	<c:if test="${empty paginatorPosition}">
		<c:set var="paginatorPosition" value="both" />
	</c:if>

	<p:panel id="#{resultsId}_panel" style="width: 100%">

		<h:form id="#{formId}" prependId="false"
			onkeypress="if (event.keyCode == 13) {return false;}">
			<p:dataTable id="datatable_#{resultsId}" var="entity"
				scrollable="#{scrollable}" value="#{dataModel}"
				multiViewState="true" paginator="true"
				rows="#{backingBean.cacheNumRows}" editable="#{editable}"
				editMode="#{editMode}" widgetVar="cellEntity_#{resultsId}"
				selection="#{backingBean.selectedEntities}" sortBy="#{'sortBy'}"
				sortField="#{sortBy}" sortOrder="#{sortOrder}"
				paginatorTemplate="${prePaginatorControls} {RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
				rowsPerPageTemplate="#{rowsPerPage}" lazy="true"
				resizableColumns="true" styleClass="custom-grid #{styleClass}"
				rowKey="#{entity.id}" first="#{backingBean.dataTableFirstAttribute}"
				reflow="true" paginatorPosition="#{paginatorPosition}">
				<p:ajax event="page" listener="#{backingBean.onPageChange}" />
				<p:ajax event="toggleSelect" update="@this" process="@this" />
				<p:ajax event="rowSelectCheckbox" />
				<p:ajax event="rowUnselectCheckbox" />
				<p:ajax event="rowSelect" />
				<p:ajax event="rowUnselect" />
				<c:if test="#{editable}">
					<p:ajax event="cellEdit" listener="#{backingBean.onCellEdit}" />
				</c:if>

				<h:outputText id="rows" value="#{backingBean.rows}" />

				<c:if test="${showFullTextSearch}">
					<f:facet name="header">
						<p:outputPanel>
							<p:inputText id="globalFilter"
								onkeyup="if (event.keyCode == 13) { PF('cellEntity_#{resultsId}').filter();return false;}"
								style="width:150px" placeholder="#{messages['commons.search']}" />
						</p:outputPanel>
					</f:facet>
				</c:if>
				<p:column id="multiSelect" selectionMode="multiple" width="4%"
					rendered="#{checkMany}" exportable="false" toggleable="false" />
				<ui:insert />
			</p:dataTable>

			<h:panelGroup rendered="#{dataModel !=null and dataModel.size()>0}">
				<p:commandButton id="#{formId}deleteEntitieslink"
					rendered="#{deleteManyButton}"
					value="#{messages['commons.deleteMultiple']}"
					action="#{backingBean.deleteMany()}" icon="ui-icon-trash"
					update="@form">

					<p:confirm header="#{messages['commons.confirmationHeader']}"
						message="#{messages['commons.confirmDelete']}"
						icon="ui-icon-alert" />

				</p:commandButton>

				<p:commandButton id="#{formId}buttonExport" icon="ui-icon-xls"
					value="#{messages['commons.exportExcel']}" ajax="false"
					rendered="#{exportButton}">
					<p:dataExporter type="xls" target="datatable_#{resultsId}"
						fileName="data" pageOnly="false" />
				</p:commandButton>
				<p:commandButton id="#{formId}buttonXlsxExport" icon="ui-icon-xls"
					value="#{messages['commons.exportExcel']}" ajax="false"
					rendered="#{exportXlsxButton}">
					<pe:exporter type="xlsx" target="datatable_#{resultsId}"
						fileName="data" pageOnly="false" skipComponents="true"
						selectionOnly="#{backingBean.selectedEntities.size()>0}" />
				</p:commandButton>
<!-- 				<p:commandButton value="#{messages['commons.exportSelection']}" -->
<!-- 					type="button" rendered="#{backingBean.getBaseCrudApi() != null}" -->
<!-- 					onclick="PF('exportSelectionDialog').show()" /> -->
				<p:commandButton id="buttonSelectionExportJson"
					rendered="#{backingBean.getBaseCrudApi() != null}"
					value="#{messages['commons.exportSelection']}" ajax="false"
					onclick="PrimeFaces.monitorDownload(null, closeExportDialog)">
					<p:fileDownload id="exportFileDownload"
						value="#{backingBean.exportJson()}" />
				</p:commandButton>
				<p:commandButton id="#{formId}buttonCsvExport"
					value="#{messages['commons.exportCsv']}" ajax="false"
					rendered="#{exportToCsv}">
					<l:dataExporter fileType="csv" source="datatable_#{resultsId}"
						fileName="#{fileName}" fileOptions="#{backingBean.csvOptions()}" />
				</p:commandButton>
				<c:if test="#{exportToXml}">
					<p:commandButton id="#{formId}exportToXml"
						value="#{messages['export.exportToXml']}"
						update=":#{p:component('exportParametersDialog')}"
						oncomplete="PF('exportParametersDialog').show()">
						<f:setPropertyActionListener
							target="#{entityExportImportBean.selectedExportTemplate}"
							value="#{null}" />
						<f:setPropertyActionListener
							target="#{entityExportImportBean.dataModelToExport}"
							value="#{dataModel}" />
						<f:setPropertyActionListener
							target="#{entityExportImportBean.selectedEntitiesToExport}"
							value="#{backingBean.selectedEntities}" />
					</p:commandButton>
				</c:if>
				<p:commandButton value="#{messages['commons.addToModule']}"
					update=":addModuleForm"
					actionListener="#{meveoModuleBean.initializeModules()}"
					rendered="#{addToModule and backingBean.canUserUpdateEntity()}"
					oncomplete="PF('addModuleDlg').show()">
				</p:commandButton>

			</h:panelGroup>

			<p:commandButton value="#{messages['commons.importCsv']}"
				rendered="#{importCsv and backingBean.canUserUpdateEntity()}"
				type="button" onclick="PF('csvDialog').show();" />
			
			<p:commandButton 
				rendered="#{import and backingBean.canUserUpdateEntity()}"
				value="#{messages[backingBean != meveoModuleListBean?'action.import':'meveoModule.importFromFile']} #{backingBean != meveoModuleListBean? backingBean.entity.class.simpleName:''}"
				id="#{formId}buttonImport" type="button"
				onclick="PF('importDataDialog').show();" />

			<p:dialog header="#{messages['commons.importCsv']}"
				id="#{formId}_strategyDlg" widgetVar="csvDialog" modal="true"
				closeOnEscape="true">
				<p:messages autoUpdate="true" />
				<hftl:decorateFormField fieldId="#{formId}_strategy"
					label="#{messages['notification.strategyImportType']}"
					rendered="#{importStrategy}">
					<p:selectOneMenu id="#{formId}_strategy"
						value="#{backingBean.strategyImportType}">
						<f:selectItem itemLabel="#{messages['commons.select']}" />
						<f:selectItem
							itemLabel="#{messages['enum.strategyImportTypeEnum.UPDATED']}"
							itemValue="UPDATED" />
						<f:selectItem
							itemLabel="#{messages['enum.strategyImportTypeEnum.REJECTE_IMPORT']}"
							itemValue="REJECTE_IMPORT" />
						<f:selectItem
							itemLabel="#{messages['enum.strategyImportTypeEnum.REJECT_EXISTING_RECORDS']}"
							itemValue="REJECT_EXISTING_RECORDS" />
						<p:ajax event="valueChange" update=":#{formId}_strategy"></p:ajax>
					</p:selectOneMenu>
				</hftl:decorateFormField>
				<div class="clearLeft">
					<p:fileUpload fileUploadListener="#{backingBean.handleFileUpload}"
						update=":#{formId} :datatable_#{resultsId}"
						rendered="#{importCsv}" multiple="true" mode="advanced"
						dragDropSupport="true" fileLimit="5" process=":#{formId}_strategy" />
				</div>
			</p:dialog>
			<p:dialog widgetVar="addModuleDlg" header="Select Module"
				dynamic="true" modal="true" styleClass="form-dialog"
				closeOnEscape="true" width="90%" appendTo="@(body)">
				<h:form id="addModuleForm">

					<p:growl id="moduleGrowl" />

					<h:panelGroup layout="block" styleClass="search-panel">
						<p:outputPanel styleClass="search-panel-fields">
							<p:inputText id="moduleCode"
								value="#{meveoModuleBean.moduleCode}">
								<c:if test="#{not empty converter}">
									<f:converter converterId="#{converter}" />
								</c:if>
							</p:inputText>
						</p:outputPanel>
						<h:panelGroup layout="block" styleClass="search-panel-actions">
							<p:commandButton id="buttonSearch" process="@this :addModuleForm"
								partialSubmit="true" action="#{meveoModuleBean.searchModules}"
								value="#{messages['commons.search']}" update="@form" />
							<p:commandButton id="buttonClear" process="@this :addModuleForm"
								action="#{meveoModuleBean.clean}"
								value="#{messages['commons.clean']}" update="@form" />
						</h:panelGroup>
					</h:panelGroup>

					<p:dataTable id="resultModuleTable" var="e" paginator="true"
						resizableColumns="true" value="#{meveoModuleBean.meveoModules}"
						rows="10" selection="#{backingBean.selectedMeveoModule}"
						rowKey="#{e.id}" lazy="#{lazy}">
						<p:column id="multiSelectModule" selectionMode="single"
							width="4%" exportable="single" toggleable="false" />
						<p:ajax event="rowSelectCheckbox" />
						<p:ajax event="rowUnselectCheckbox" />
						<p:column>
							<f:facet name="header">
								<h:outputText value="#{messages['BusinessEntity.code']}" />
							</f:facet>
							<h:outputText value="#{e['code']}" />
						</p:column>
						<p:column>
							<f:facet name="header">
								<h:outputText value="#{messages['BusinessEntity.description']}" />
							</f:facet>
							<h:outputText value="#{e['description']}" />
						</p:column>
						<f:facet name="footer">
							<p:commandButton
								value="#{messages['meveoModuleItem.addToModule']}"
								process="@this :addModuleForm" partialSubmit="true"
								partialSubmitFilter=":not([name*='omitFromSubmit'])"
								update="@form @form:moduleGrowl"
								oncomplete="if (args &amp;&amp; !args.validationFailed) PF('addModuleDlg').hide()"
								action="#{backingBean.addManyToModule}">
								<p:resetInput target="@form" />
							</p:commandButton>
							<p:commandButton value="#{messages['commons.close']}"
								update="@this :datatable_#{resultsId}"
								oncomplete="PF('addModuleDlg').hide()">
								<p:resetInput target="@form" />
							</p:commandButton>
						</f:facet>
					</p:dataTable>
				</h:form>
			</p:dialog>

			<p:dialog resizable="false"
				header="#{messages['commons.exportSelection']}"
				id="#{formId}_exportSelectionDialog" styleClass="form-dialog"
				widgetVar="exportSelectionDialog" modal="true" closeOnEscape="true"
				rendered="#{backingBean.getBaseCrudApi() != null}">
				<hftl:decorateFormField fieldId="exportFormat" label="Format"
					layout="block">
					<p:selectOneMenu id="exportFormat" name="exporFormat"
						value="#{backingBean.exportFormat}">
						<f:selectItems value="#{backingBean.exportFormats}" />
						<p:ajax event="valueChange" update="exportFormat" />
					</p:selectOneMenu>
				</hftl:decorateFormField>
				<div class="clearLeft">
					<p:commandButton id="buttonSelectionExport"
						value="#{messages['action.export']}" ajax="false"
						onclick="PrimeFaces.monitorDownload(null, closeExportDialog)">
						<p:fileDownload id="exportFileDownload"
							value="#{backingBean.export()}" />
					</p:commandButton>
				</div>
			</p:dialog>

			<p:remoteCommand name="closeExportDialog"
				oncomplete="PF('exportSelectionDialog').hide()" />

			<p:dialog header="Import data" id="#{formId}_importDataDialog"
				widgetVar="importDataDialog" modal="true" closeOnEscape="true">
				<hftl:decorateFormField fieldId="#{formId}_override"
					componentWidth="100">
					<p:selectBooleanCheckbox immediate="true" id="#{formId}_override"
						value="#{backingBean.override}" itemLabel="Override existing data">
						<p:ajax event="valueChange" update=":#{formId}_override" />
					</p:selectBooleanCheckbox>
				</hftl:decorateFormField>
				<div class="clearLeft">
					<p:fileUpload rendered="#{backingBean != meveoModuleListBean}"
						accept=".xml,.csv,.json" mode="advanced" dragDropSupport="true"
						allowTypes="/(\.|\/)(xml|json|csv)$/"
						fileUploadListener="#{backingBean.importData}"
						update=":#{formId} :datatable_#{resultsId}" />
					<p:fileUpload rendered="#{backingBean == meveoModuleListBean}"
						accept=".xml,.csv,.json,.zip" mode="advanced"
						dragDropSupport="true" allowTypes="/(\.|\/)(xml|json|csv|zip)$/"
						fileUploadListener="#{backingBean.importData}"
						update=":#{formId} :datatable_#{resultsId}" />
				</div>
			</p:dialog>

			<p:panel styleClass="buttons-set-data-table">
				<ui:insert name="add-on-buttons" />
			</p:panel>

			<p:blockUI block="datatable_#{resultsId}"
				trigger="datatable_#{resultsId}">
                LOADING<br />
				<p:graphicImage name="ajax-loader1.gif" library="img" />
			</p:blockUI>

			<p:panelGrid id="blockUIContentDataTable_#{resultsId}" columns="2"
				style="display:none;">
				<h:graphicImage library="img" name="ajax-loader1.gif"
					style="margin-right: 12px; vertical-align: middle;" />
				<h:outputText value="#{messages['message.loading.data']}"
					style="white-space: nowrap;" />
			</p:panelGrid>
		</h:form>

		<c:if test="#{exportToXml}">
			<hftl:exportToXmlDialogs
				messagesId=":#{p:component('search_messages')}" />
		</c:if>
	</p:panel>

</ui:composition>